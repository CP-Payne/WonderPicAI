// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package gen

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var GenCalculationJSHandle = templ.NewOnceHandle()

func GenCalculationJS() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n    function bindGenFormEvents() {\n        const incrementBtn = document.getElementById(\"increment-images\");\n        const decrementBtn = document.getElementById(\"decrement-images\");\n        const imageCountInput = document.getElementById(\"image-count-input\");\n        const estimatedCostDisplay = document.getElementById(\"estimated-cost\");\n\n        if (!incrementBtn || !decrementBtn || !imageCountInput || !estimatedCostDisplay) return;\n\n        const costPerImage = parseInt(document.getElementById(\"gen-form\").dataset.costPerImage || \"0\");\n\n        function updateCost() {\n            const count = parseInt(imageCountInput.value || \"1\");\n            estimatedCostDisplay.textContent = count * costPerImage;\n        }\n\n        incrementBtn.addEventListener(\"click\", function () {\n            let current = parseInt(imageCountInput.value || \"1\");\n            if (current < 10) {\n                imageCountInput.value = current + 1;\n                updateCost();\n            }\n        });\n\n        decrementBtn.addEventListener(\"click\", function () {\n            let current = parseInt(imageCountInput.value || \"1\");\n            if (current > 1) {\n                imageCountInput.value = current - 1;\n                updateCost();\n            }\n        });\n\n        imageCountInput.addEventListener(\"input\", updateCost);\n        updateCost();\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", bindGenFormEvents);\n\n    // Rebind after HTMX swaps\n    document.body.addEventListener(\"htmx:afterSwap\", function (evt) {\n        if (evt.target.id === \"gen-form\" || evt.target.querySelector(\"#gen-form\")) {\n            bindGenFormEvents();\n        }\n    });\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = GenCalculationJSHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
