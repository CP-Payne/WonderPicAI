package auth

import (
	VM "github.com/CP-Payne/wonderpicai/web/template/viewmodel"
)

templ SignupForm(data VM.SignupFormComponentData) {
	<div id="signup-card" class="card-body space-y-2">
		<h1 class="text-3xl text-secondary">Signup</h1>
		<form class="space-y-4" hx-post="/auth/signup" hx-swap="outerHTML" hx-target="#signup-card">
			<div>
				<fieldset class="fieldset">
					<label class="fieldset-legend">Username</label>
					<div class="input validator">
						<svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
							<g
								stroke-linejoin="round"
								stroke-linecap="round"
								stroke-width="2.5"
								fill="none"
								stroke="currentColor"
							>
								<path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
								<circle cx="12" cy="7" r="4"></circle>
							</g>
						</svg>
						<input
							type="text"
							required
							placeholder="Username"
							name="username"
							value={ data.Form.Username }
							pattern="[A-Za-z][A-Za-z0-9\-]*"
							minlength="3"
							maxlength="30"
							title="Only letters, numbers or dash"
							autocomplete="username"
						/>
					</div>
					if err, ok := data.Errors["username"]; ok {
						<p class="text-error text-xs mt-1">{ err }</p>
					} else {
						<p class="validator-hint hidden">
							Must be 3 to 30 characters
							<br/>
							containing only letters, numbers or dash
						</p>
					}
				</fieldset>
				// =======================================================================================
				// Added to prevent password manager from overlapping the validation message
				// =======================================================================================
				<fieldset class="fieldset hidden">
					<label class="fieldset-legend">Username</label>
					<div class="input">
						<input type="text" placeholder="Username" autocomplete="username"/>
					</div>
				</fieldset>
				// =======================================================================================
				<fieldset class="fieldset">
					<label class="fieldset-legend">Email</label>
					<div class="input validator">
						<svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
							<g
								stroke-linejoin="round"
								stroke-linecap="round"
								stroke-width="2.5"
								fill="none"
								stroke="currentColor"
							>
								<rect width="20" height="16" x="2" y="4" rx="2"></rect>
								<path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path>
							</g>
						</svg>
						<input
							type="email"
							name="email"
							placeholder="mail@site.com"
							value={ data.Form.Email }
							required
							autocomplete="email"
						/>
					</div>
					if err, ok := data.Errors["email"]; ok {
						<p class="text-error text-xs mt-1">{ err }</p>
					} else {
						<div class="validator-hint hidden">Enter valid email address</div>
					}
				</fieldset>
				<fieldset class="fieldset">
					<label class="fieldset-legend">Password</label>
					<div class="input validator">
						<svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
							<g
								stroke-linejoin="round"
								stroke-linecap="round"
								stroke-width="2.5"
								fill="none"
								stroke="currentColor"
							>
								<path
									d="M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z"
								></path>
								<circle cx="16.5" cy="7.5" r=".5" fill="currentColor"></circle>
							</g>
						</svg>
						<input
							type="password"
							id="password-input"
							required
							placeholder="Password"
							pattern={ PasswordValidationRegex() }
							title="Must be more than 8 characters, including number, lowercase letter, uppercase letter and
						special character"
							name="password"
							autocomplete="password"
						/>
						<button
							type="button"
							data-target-input="password-input"
							class="toggle-password-visibility btn btn-ghost btn-sm  text-base-content hover:bg-base-300"
							aria-label="Toggle password visibility"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="eye-icon h-5 w-5"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
								stroke-width="2"
							>
								<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
								></path>
							</svg>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="eye-slash-icon h-5 w-5 hidden"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
								stroke-width="2"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"
								></path>
							</svg>
						</button>
					</div>
					if err, ok := data.Errors["password"]; ok {
						<p class="text-error text-xs mt-1">{ err }</p>
					} else {
						<p class="validator-hint hidden">
							Must be more than 8 characters, including
							<br/>
							At least one number
							<br/>
							At least one lowercase letter
							<br/>
							At least one uppercase letter
							<br/>
							At least one special character
						</p>
					}
				</fieldset>
				<fieldset class="fieldset">
					<label class="fieldset-legend">Confirm Password</label>
					<div id="confirm-password-container" class="input">
						<svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
							<g
								stroke-linejoin="round"
								stroke-linecap="round"
								stroke-width="2.5"
								fill="none"
								stroke="currentColor"
							>
								<path
									d="M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z"
								></path>
								<circle cx="16.5" cy="7.5" r=".5" fill="currentColor"></circle>
							</g>
						</svg>
						<input
							type="password"
							id="confirm-password-input"
							required
							placeholder="Confirm Password"
							name="confirmPassword"
						/>
						<button
							type="button"
							data-target-input="confirm-password-input"
							class="toggle-password-visibility btn btn-ghost btn-sm  text-base-content hover:bg-base-300"
							aria-label="Toggle password visibility"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="eye-icon h-5 w-5"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
								stroke-width="2"
							>
								<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
								></path>
							</svg>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="eye-slash-icon h-5 w-5 hidden"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
								stroke-width="2"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"
								></path>
							</svg>
						</button>
					</div>
					if err, ok := data.Errors["confirmPassword"]; ok {
						<p class="text-error text-xs mt-1">{ err }</p>
					} else {
						<p id="confirm-password-error" class="text-error text-xs mt-1"></p>
					}
				</fieldset>
			</div>
			<button type="submit" class="btn btn-primary w-full">Signup<i class="fa-solid fa-arrow-right"></i></button>
			<p>
				Already have an account? 
				<span>
					<a
						href="/auth/login"
						aria-label="Go to login page"
						class="hover:cursor-pointer text-accent hover:text-accent/50"
					>Login</a>
				</span>
			</p>
			if data.Error != "" {
				<p class="text-error text-xs mt-1 w-full text-center">{ data.Error }</p>
			}
		</form>
	</div>
}

func PasswordValidationRegex() string {
	// return templ.SafeCSS("(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*(),.?:{}\\|<>]).{8,}")
	return `^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*\\\(\\\),.?:\\\{\\\}\\\\\|<>]).{8,}$`
}
