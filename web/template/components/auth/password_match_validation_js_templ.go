// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package auth

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var PasswordMatchValidationJSHandle = templ.NewOnceHandle()

func PasswordMatchValidationJS() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n    document.addEventListener('DOMContentLoaded', function () {\n        const passwordInput = document.getElementById('password-input');\n        const confirmPasswordInput = document.getElementById('confirm-password-input');\n        const confirmPasswordErrorElement = document.getElementById('confirm-password-error');\n        const confirmPasswordContainer = document.getElementById('confirm-password-container')\n\n\n        const successBorderClass = \"border-success\"\n        const errorBorderClass = \"border-error\"\n\n        if (!passwordInput || !confirmPasswordInput || !confirmPasswordErrorElement) {\n            console.warn('Password match validation: One or more required elements not found.');\n            return;\n        }\n\n        function validatePasswordsMatch() {\n\n\n            confirmPasswordContainer.classList.remove(successBorderClass, errorBorderClass);\n\n            if (confirmPasswordInput.value === \"\") {\n                confirmPasswordErrorElement.textContent = \"\";\n                confirmPasswordInput.setCustomValidity(\"\");\n                return;\n            }\n\n            if (passwordInput.value !== confirmPasswordInput.value) {\n                confirmPasswordErrorElement.textContent = \"Passwords do not match.\";\n                confirmPasswordInput.setCustomValidity(\"Passwords do not match.\");\n                confirmPasswordContainer.classList.add(errorBorderClass)\n\n            } else {\n                confirmPasswordErrorElement.textContent = \"\";\n                confirmPasswordInput.setCustomValidity(\"\");\n                confirmPasswordContainer.classList.add(successBorderClass)\n            }\n        }\n\n        confirmPasswordInput.addEventListener('blur', validatePasswordsMatch);\n\n\n        passwordInput.addEventListener('input', function () {\n            if (confirmPasswordInput.value !== \"\") {\n                validatePasswordsMatch();\n            } else {\n                confirmPasswordErrorElement.textContent = \"\";\n                confirmPasswordInput.setCustomValidity(\"\");\n                confirmPasswordContainer.classList.remove(successBorderClass, errorBorderClass);\n            }\n        });\n\n\n        confirmPasswordInput.addEventListener('focus', function () {\n            confirmPasswordContainer.classList.remove(successBorderClass, errorBorderClass);\n        })\n    });\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = PasswordMatchValidationJSHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
