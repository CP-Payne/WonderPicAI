package auth

templ PasswordMatchValidationJS() {
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const passwordInput = document.getElementById('password-input');
        const confirmPasswordInput = document.getElementById('confirm-password-input');
        const confirmPasswordErrorElement = document.getElementById('confirm-password-error');
        const confirmPasswordContainer = document.getElementById('confirm-password-container')


        const successBorderClass = "border-success"
        const errorBorderClass = "border-error"

        if (!passwordInput || !confirmPasswordInput || !confirmPasswordErrorElement) {
            console.warn('Password match validation: One or more required elements not found.');
            return;
        }

        function validatePasswordsMatch() {


            confirmPasswordContainer.classList.remove(successBorderClass, errorBorderClass);

            if (confirmPasswordInput.value === "") {
                confirmPasswordErrorElement.textContent = "";
                confirmPasswordInput.setCustomValidity("");
                return;
            }

            if (passwordInput.value !== confirmPasswordInput.value) {
                confirmPasswordErrorElement.textContent = "Passwords do not match.";
                confirmPasswordInput.setCustomValidity("Passwords do not match.");
                confirmPasswordContainer.classList.add(errorBorderClass)

            } else {
                confirmPasswordErrorElement.textContent = "";
                confirmPasswordInput.setCustomValidity("");
                confirmPasswordContainer.classList.add(successBorderClass)
            }
        }

        confirmPasswordInput.addEventListener('blur', validatePasswordsMatch);


        passwordInput.addEventListener('input', function () {
            if (confirmPasswordInput.value !== "") {
                validatePasswordsMatch();
            } else {
                confirmPasswordErrorElement.textContent = "";
                confirmPasswordInput.setCustomValidity("");
                confirmPasswordContainer.classList.remove(successBorderClass, errorBorderClass);
            }
        });


        confirmPasswordInput.addEventListener('focus', function () {
            confirmPasswordContainer.classList.remove(successBorderClass, errorBorderClass);
        })
    });
</script>
}